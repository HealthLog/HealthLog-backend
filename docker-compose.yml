version: '3.8'

services:
  embedding-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: embedding-api
    restart: unless-stopped

    # 리소스 제한
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 3G
        reservations:
          cpus: '1.0'
          memory: 2G

    # 환경 변수 (.env 파일에서 로드)
    env_file:
      - .env

    environment:
      # Redis 설정 (컨테이너 네트워크용으로 오버라이드)
      - REDIS_URL=redis://redis:6379

    # 볼륨 (모델 캐시 영구 저장)
    volumes:
      - model-cache:/home/appuser/.cache/huggingface

    # 포트 매핑
    ports:
      - "8000:8000"

    # 의존성
    depends_on:
      redis:
        condition: service_healthy

    # 네트워크 (Supabase와 통신 + Redis 사용)
    networks:
      - embedding-network
      - supabase-network

    # 헬스체크
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # 로깅
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: embedding-redis
    restart: unless-stopped

    # 리소스 제한
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

    # Redis 설정
    command: >
      redis-server
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --appendonly no
      --save ""

    # 네트워크
    networks:
      - embedding-network

    # 헬스체크
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

    # 로깅
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Prometheus (선택적 - 모니터링)
  prometheus:
    image: prom/prometheus:latest
    container_name: embedding-prometheus
    restart: unless-stopped

    # 리소스 제한
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

    # 설정 파일
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus

    # 포트
    ports:
      - "9090:9090"

    # 명령
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'

    # 네트워크
    networks:
      - embedding-network

    # 로깅
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

networks:
  embedding-network:
    driver: bridge
  supabase-network:
    external: true
    name: supabase_network_fitness_database

volumes:
  model-cache:
    driver: local
  prometheus-data:
    driver: local
